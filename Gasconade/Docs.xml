<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Gasconade</name>
    </assembly>
    <members>
        <member name="T:Gasconade.ILogListener">
            <summary>
            Interface for injecting into the log class
            </summary>
        </member>
        <member name="M:Gasconade.ILogListener.HandleMessage(Gasconade.LogLevel,System.String,System.Object)">
            <summary>
            Handle a message sent via the logging system. It is up to the listener to determine which levels
            should be responded to, and what actions to take
            </summary>
            <param name="level">Log level as stated by the caller</param>
            <param name="message">message from the log, with templates completed from data</param>
            <param name="data">the original object sent by caller</param>
        </member>
        <member name="T:Gasconade.Log">
            <summary>
            Log sender static container. Use this to send your log messages.
            Inject log suppliers to do the final writing
            </summary>
        </member>
        <member name="M:Gasconade.Log.AddListener(Gasconade.ILogListener)">
            <summary>
            Add a listener to static log.
            Every listener added will have a chance to respond to every log message sent
            </summary>
        </member>
        <member name="M:Gasconade.Log.Diagnostic``1(``0)">
            <summary>
            Send a diagnostic-level message.
            Diagnostic messages are used for integration and diagnostic purposes, and should not be recorded in production software
            </summary>
            <param name="logMessage">The message object. The class should have a LogMessageTemplate attribute</param>
        </member>
        <member name="M:Gasconade.Log.Info``1(``0)">
            <summary>
            Send a info-level message.
            Info messages are messages that don't necessarily relate to an error condition
            </summary>
            <param name="logMessage">The message object. The class should have a LogMessageTemplate attribute</param>
        </member>
        <member name="M:Gasconade.Log.Warning``1(``0)">
            <summary>
            Send a warning-level message.
            Warning messages are used for unexpected or out-of-normal conditions that may result in an error condition later
            </summary>
            <param name="logMessage">The message object. The class should have a LogMessageTemplate attribute</param>
        </member>
        <member name="M:Gasconade.Log.Error``1(``0)">
            <summary>
            Send a Error-level message.
            Error messages relate to an error conditions that prevents normal completion of an operation
            </summary>
            <param name="logMessage">The message object. The class should have a LogMessageTemplate attribute</param>
        </member>
        <member name="M:Gasconade.Log.Critical``1(``0)">
            <summary>
            Send a Critical-level message.
            Critical messages relate to conditions that prevent the system from operating, or providing the intended service
            </summary>
            <param name="logMessage">The message object. The class should have a LogMessageTemplate attribute</param>
        </member>
        <member name="T:Gasconade.LogLevel">
            <summary>
            Available log levels
            </summary>
        </member>
        <member name="F:Gasconade.LogLevel.Diagnostic">
            <summary>
            Messages that are used for integration and diagnostic purposes, and should not be recorded in production software
            </summary>
        </member>
        <member name="F:Gasconade.LogLevel.Info">
            <summary>
            Informative messages that don't necessarily relate to an error condition
            </summary>
        </member>
        <member name="F:Gasconade.LogLevel.Warning">
            <summary>
            Informative messages that warn of unexpected or out-of-normal conditions that may result in an error condition later
            </summary>
        </member>
        <member name="F:Gasconade.LogLevel.Error">
            <summary>
            Message relates to an error condition that prevents normal completion of an operation
            </summary>
        </member>
        <member name="F:Gasconade.LogLevel.Critical">
            <summary>
            Message relates to a condition that prevents the system from operating, or providing the intended service
            </summary>
        </member>
        <member name="T:Gasconade.LogMessageDescriptionAttribute">
            <summary>
            This attribute gives a description of the log message: the meaning, when it would be written, and actions that can be taken in response
            </summary>
        </member>
        <member name="P:Gasconade.LogMessageDescriptionAttribute.Description">
            <summary>
            An overall description of the log message and its general meaning
            </summary>
        </member>
        <member name="P:Gasconade.LogMessageDescriptionAttribute.Causes">
            <summary>
            Optional: A description of why this log might be triggered
            </summary>
        </member>
        <member name="P:Gasconade.LogMessageDescriptionAttribute.Actions">
            <summary>
            Optional: A description of action to be taken based on the log being triggered
            </summary>
        </member>
        <member name="M:Gasconade.LogMessageDescriptionAttribute.#ctor(System.String)">
            <summary>
            Gives the string template of a log message.
            Replacements can be added in the style of `{PropertyName}`
            </summary>
        </member>
        <member name="T:Gasconade.LogMessageTemplateAttribute">
            <summary>
            This attribute gives the string template of a log message.
            Replacements can be added in the style of `{PropertyName}`
            </summary>
        </member>
        <member name="P:Gasconade.LogMessageTemplateAttribute.MessageTemplate">
            <summary>
            Message template
            </summary>
        </member>
        <member name="M:Gasconade.LogMessageTemplateAttribute.#ctor(System.String)">
            <summary>
            Gives the string template of a log message.
            Replacements can be added in the style of `{PropertyName}`
            </summary>
        </member>
        <member name="T:Gasconade.LogParamAttribute">
            <summary>
            This attribute gives a description of a log template replacement property in the log message class
            </summary>
        </member>
        <member name="P:Gasconade.LogParamAttribute.Description">
            <summary>
            Description of the log parameter
            </summary>
        </member>
        <member name="M:Gasconade.LogParamAttribute.#ctor(System.String)">
            <summary>
            Gives a description of a log template replacement parameter
            </summary>
        </member>
        <member name="T:Gasconade.LogTemplateDescription">
            <summary>
            Description data from a templated log message
            </summary>
        </member>
        <member name="P:Gasconade.LogTemplateDescription.Description">
            <summary>
            An overall description of the log message and its general meaning
            </summary>
        </member>
        <member name="P:Gasconade.LogTemplateDescription.Causes">
            <summary>
            Optional: A description of why this log might be triggered
            </summary>
        </member>
        <member name="P:Gasconade.LogTemplateDescription.Actions">
            <summary>
            Optional: A description of action to be taken based on the log being triggered
            </summary>
        </member>
        <member name="P:Gasconade.LogTemplateDescription.IsObsolete">
            <summary>
            If true, the message has been retired, and is recorded for historical purposes only
            </summary>
        </member>
        <member name="P:Gasconade.LogTemplateDescription.RetirementMessage">
            <summary>
            Optional: (if `IsObsolete` is true) A description of why the message was retired
            </summary>
        </member>
        <member name="T:Gasconade.TemplatedLogMessage">
            <summary>
            Base class for templated log messages.
            This handles most of the template conversion and property reading
            </summary>
        </member>
        <member name="M:Gasconade.TemplatedLogMessage.ToString">
            <summary>
            Expand template with properties from derived instance
            </summary>
        </member>
        <member name="M:Gasconade.TemplatedLogMessage.UntemplatedMessage">
            <summary>
            If a template is not supplied, generate a default template
            </summary>
        </member>
        <member name="M:Gasconade.TemplatedLogMessage.GetDescription">
            <summary>
            Extract the description data from the derived instance
            </summary>
        </member>
        <member name="M:Gasconade.TemplatedLogMessage.GetPropertyDescriptions(System.Type)">
            <summary>
            Get a dictionary of (prop name)=>(descriptive text) for all properties public in the type
            </summary>
        </member>
        <member name="M:Gasconade.TemplatedLogMessage.GetDescription(System.Type)">
            <summary>
            Extract the description data from a type definition
            </summary>
        </member>
        <member name="M:Gasconade.TemplatedLogMessage.GetTemplateText(System.Type)">
            <summary>
            Get the raw message template for the log message type
            </summary>
        </member>
        <member name="T:Gasconade.TemplatedLogMessage.PropertyFormatProvider">
            <summary>
            This format provider abuses the 'format' string to look up property values on the parameter object
            </summary>
        </member>
    </members>
</doc>
